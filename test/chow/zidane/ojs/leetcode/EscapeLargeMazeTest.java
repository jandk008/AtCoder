package chow.zidane.ojs.leetcode;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

import chow.zidane.ojs.leetcode.converters.ToIntegerArrayConverter;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.converter.ConvertWith;
import org.junit.jupiter.params.provider.CsvSource;

class EscapeLargeMazeTest {

    @ParameterizedTest
    @CsvSource( {"'0,1|1,0','0,0','0,2'", "'0,0|0,1|0,2|1,0|1,2|2,0|2,1|2,2','1,1','0,3'", "'0,3|1,2|2,1|3,0','0,0','4,4'",
            "'100059,100063|100060,100064|100061,100065|100062,100066|"
                    + "100063,100067|100064,100068|100065,100069|100066,100070|100067,100071|100068,100072|100069,100073|100070,"
                    + "100074|100071,100075|100072,100076|100073,100077|100074,100078|100075,100079|100076,100080|100077,100081|"
                    + "100078,100082|100079,100083|100080,100082|100081,100081|100082,100080|100083,100079|100084,100078|100085,"
                    + "100077|100086,100076|100087,100075|100088,100074|100089,100073|100090,100072|100091,100071|100092,100070|"
                    + "100093,100069|100094,100068|100095,100067|100096,100066|100097,100065|100098,100064|100099,100063|100098,"
                    + "100062|100097,100061|100096,100060|100095,100059|100094,100058|100093,100057|100092,100056|100091,100055|"
                    + "100090,100054|100089,100053|100088,100052|100087,100051|100086,100050|100085,100049|100084,100048|100083,"
                    + "100047|100082,100046|100081,100045|100080,100044|100079,100043|100078,100044|100077,100045|100076,100046|"
                    + "100075,100047|100074,100048|100073,100049|100072,100050|100071,100051|100070,100052|100069,100053|100068,"
                    + "100054|100067,100055|100066,100056|100065,100057|100064,100058|100063,100059|100062,100060|100061,100061|100060,"
                    + "100062','100079,100063','999948,999967'"})
    void isNotPossibleToEscape(
            @ConvertWith(ToIntegerArrayConverter.class) int[][] blocked,
            @ConvertWith(ToIntegerArrayConverter.class) int[] source,
            @ConvertWith(ToIntegerArrayConverter.class) int[] target) {
        assertFalse(EscapeLargeMaze.isPossible(blocked, source, target));
    }

    @ParameterizedTest
    @CsvSource( {"'','0,0','999999,999999'",
            "'691938,300406|710196,624190|858790,609485|268029,225806|200010,188664|132599,612099|329444,633495|196657,757958|628509,"
                    + "883388','655988,180910','267728,840949'", "'100005,100073|100006,100074|100007,100075|100008,100076|100009,"
            + "100077|100010,100078|100011,100079|100012,100080|100013,100081|100014,100082|100015,100083|100016,100084"
            + "|100017,100085|100018,100086|100019,100087|100020,100088|100021,100089|100022,100090|100023,100091|100024,"
            + "100092|100025,100091|100026,100090|100027,100089|100028,100088|100029,100087|100030,100086|100031,100085"
            + "|100032,100084|100033,100083|100034,100082|100035,100081|100036,100080|100037,100079|100038,100078|100039,"
            + "100077|100040,100076|100041,100075|100042,100074|100043,100073|100044,100072|100043,100071|100042,100070"
            + "|100041,100069|100040,100068|100039,100067|100038,100066|100037,100065|100036,100064|100035,100063|100034,"
            + "100062|100033,100061|100032,100060|100031,100059|100030,100058|100029,100057|100028,100056|100027,100055"
            + "|100026,100054|100025,100053|100024,100052|100023,100053|100022,100054|100021,100055|100020,100056|100019,"
            + "100057|100018,100058|100017,100059|100016,100060|100015,100061|100014,100062|100013,100063|100012,100064"
            + "|100011,100065|100010,100066|100009,100067|100008,100068|100007,100069|100006,100070|100005,100071','100024,100072',"
            + "'999994,999990'"})
    void isPossibleToEscape(
            @ConvertWith(ToIntegerArrayConverter.class) int[][] blocked,
            @ConvertWith(ToIntegerArrayConverter.class) int[] source,
            @ConvertWith(ToIntegerArrayConverter.class) int[] target) {
        assertTrue(EscapeLargeMaze.isPossible(blocked, source, target));
    }

}
